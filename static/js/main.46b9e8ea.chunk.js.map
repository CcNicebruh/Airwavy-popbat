{"version":3,"sources":["img/1.png","img/2.png","sound/pop.m4a","App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","getValuefromCookies","cookies","document","cookie","split","parseInt","useSound","sound","play","useState","clicked","addClick","click","$","css","notClick","className","id","tabIndex","onTouchStart","onKeyUp","onKeyDown","onMouseDown","onMouseUp","src","notPop","alt","Pop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"oOAAe,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,gC,OCmD1BA,MAxCf,WAEE,IAAMC,EAAsB,WAE1B,IAAMC,EAAmBC,SAASC,OAAOC,MAAM,YAG/C,OAF0BC,SAASJ,EAAQ,KAK7C,EAAeK,YAASC,GAAjBC,EAAP,oBAEA,EAA4BC,mBAAUT,IAA4BA,IAAJ,GAA9D,mBAAOU,EAAP,KAAgBC,EAAhB,KAEMC,EAAQ,WACZD,EAASD,EAAU,GACnBR,SAASC,OAAS,YAAcO,EAAU,GAC1CF,IACAK,IAAE,QAAQC,IAAI,UAAW,QACzBD,IAAE,WAAWC,IAAI,UAAW,UAIxBC,EAAW,WACfF,IAAE,WAAWC,IAAI,UAAW,QAC5BD,IAAE,QAAQC,IAAI,UAAW,UAG3B,OACE,sBAAKE,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBACA,oBAAIA,UAAU,eAAd,SAA8BN,IAC9B,sBAAKO,GAAG,YAAYC,SAAU,EAAGC,aAAcP,EAAOQ,QAASR,EAAOS,UAAWN,EAAUO,YAAaV,EAAOW,UAAWR,EAA1H,UACE,qBAAKC,UAAU,MAAMC,GAAG,MAAMO,IAAKC,EAAQC,IAAI,WAC/C,qBAAKV,UAAU,SAASC,GAAG,SAASO,IAAKG,EAAKD,IAAI,eC/B3CE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrC,SAASsC,eAAe,SAM1BZ,M","file":"static/js/main.46b9e8ea.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/1.3ac62e4a.png\";","export default __webpack_public_path__ + \"static/media/2.e5e8cfbd.png\";","export default __webpack_public_path__ + \"static/media/pop.ea7920cc.m4a\";","import React, {useState} from 'react';\nimport './App.scss';\nimport $ from 'jquery';\nimport useSound from 'use-sound';\n\nimport notPop from './img/1.png'\nimport Pop from './img/2.png'\n\n// @ts-ignore  \nimport sound from './sound/pop.m4a'\n\nfunction App() {\n\n  const getValuefromCookies = ():number => {\n    \n    const cookies:string[] = document.cookie.split('clicked=')\n    const totalValue:number = parseInt(cookies[1])\n    \n    return totalValue\n  }\n\n  const [play] = useSound(sound)\n\n  const [clicked, addClick] = useState(!getValuefromCookies() ? 0 : getValuefromCookies())\n\n  const click = () => {\n    addClick(clicked + 1)\n    document.cookie = \"clicked=\" + (clicked + 1)\n    play()\n    $(\"#bat\").css(\"display\", \"none\")\n    $(\"#batpop\").css(\"display\", \"block\")\n    \n  }\n\n  const notClick = () => {\n    $(\"#batpop\").css(\"display\", \"none\")\n    $(\"#bat\").css(\"display\", \"block\")\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">PopBat</h1>\n      <h1 className=\"number title\">{clicked}</h1>\n      <div id=\"clickarea\" tabIndex={0} onTouchStart={click} onKeyUp={click} onKeyDown={notClick} onMouseDown={click} onMouseUp={notClick}>\n        <img className=\"bat\" id=\"bat\" src={notPop} alt=\"notPop\"/>\n        <img className=\"batpop\" id=\"batpop\" src={Pop} alt=\"Pop\"/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}